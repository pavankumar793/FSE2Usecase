# version: '3.8'
# services:

#   userservice:
#     image: userservice
#     build:
#       context: ./user-service
#       dockerfile: Dockerfile
#     ports:
#       - "8081:8081"

#   blogservice:
#     image: blogservice
#     build:
#       context: ./blog-service
#       dockerfile: Dockerfile
#     ports:
#       - "8082:8082"

#   applicationgateway:
#     image: applicationgateway
#     build:
#       context: ./app-gateway
#       dockerfile: Dockerfile
#     ports:
#       - "8085:8085"
  
#   prometheus:
#     image: prom/prometheus
#     ports:
#       - 9090:9090
#     volumes:
#       - ./prometheus.yml:/etc/prometheus/prometheus.yml
#     networks:
#       - prometheus-network

#   grafana:
#     image: grafana/grafana
#     ports:
#       - 3000:3000

  # zookeeper:
  #   image: confluentinc/cp-zookeeper:latest
  #   environment:
  #     ZOOKEEPER_CLIENT_PORT: 2181
  #   ports:
  #     - "2181:2181"
  #   healthcheck:
  #     test: ["CMD", "zkServer.sh", "status"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 5

  # kafka:
  #   image: confluentinc/cp-kafka:latest
  #   depends_on:
  #     - zookeeper
  #   ports:
  #     - "9092:9092"
  #   environment:
  #     KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  #     KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
  #     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
  #     KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
  #     KAFKA_CREATE_TOPICS: "blogSiteApplicationTopic:1:1"
  #     KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  #     KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
  #     KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
  #   restart: on-failure
  #   command: ["sh", "-c", "while [ ! -e /var/run/docker.sock ]; do sleep 1; done; /etc/confluent/docker/run"]

  # elasticsearch:
  #   image: docker.elastic.co/elasticsearch/elasticsearch:7.10.1
  #   ports:
  #     - 9200:9200
  #   environment:
  #     - discovery.type=single-node

  # logstash:
  #   image: docker.elastic.co/logstash/logstash:7.10.1
  #   ports:
  #     - 9600:9600
  #   volumes:
  #     - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf
  #   depends_on:
  #     - elasticsearch

  # kibana:
  #   image: docker.elastic.co/kibana/kibana:7.10.1
  #   ports:
  #     - 5601:5601
  #   depends_on:
  #     - elasticsearch

# networks:
#   prometheus-network:
#     external: true